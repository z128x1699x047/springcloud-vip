spring.application.name=micro-order-security
server.port=8086

eureka.client.serviceUrl.defaultZone=http://admin:admin@localhost:8763/eureka/
#服务续约，心跳的时间间隔
eureka.instance.lease-renewal-interval-in-seconds=30
#如果从前一次发送心跳时间起，90秒没接受到新的心跳，讲剔除服务
eureka.instance.lease-expiration-duration-in-seconds=90
#表示eureka client间隔多久去拉取服务注册信息，默认为30秒
eureka.client.registry-fetch-interval-seconds=30

mybatis.typeAliasesPackage=com.xiangxue.jack.bean
mybatis.mapper-locations=classpath:com/xiangxue/jack/mapper/commomMapper.xml

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/consult?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456

#sql日志
logging.level.com.xiangxue.jack.dao=debug

spring.cloud.config.profile=dev
spring.cloud.config.label=master
#这种配置是configserver还单机情况，直接连接这个单机服务就行
#spring.cloud.config.uri=http://localhost:8085/
#configserver高可用配置
#开启configserver服务发现功能
spring.cloud.config.discovery.enabled=true
#服务发现的服务名称
spring.cloud.config.discovery.service-id=config-server

#如果连接不上获取配置有问题，快速响应失败
spring.cloud.config.fail-fast=true
#默认重试的间隔时间，默认1000ms
spring.cloud.config.retry.multiplier=1000
#下一间隔时间的乘数，默认是1.1
#spring.cloud.config.retry.initial-interval=1.1
#最大间隔时间，最大2000ms
spring.cloud.config.retry.max-interval=2000
#最大重试次数，默认6次
spring.cloud.config.retry.max-attempts=6


#spring.rabbitmq.host=192.168.67.139
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=admin
#spring.rabbitmq.password=admin

# 刷新配置url  http://localhost:8081/actuator/bus-refresh
spring.cloud.bus.refresh.enabled=true
spring.cloud.bus.trace.enabled=true

management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
#hystrix.stream  开放所有的监控接口
management.endpoints.web.exposure.include=*

zookeeper.config.enable=false

feign.hystrix.enabled=true

#security.oauth2.client.clientId=micro-order
#security.oauth2.client.client-secret=123456
#security.oauth2.resource.jwt.key-uri=http://localhost:3031/oauth/token_key
#security.oauth2.client.access-token-uri=http://localhost:3031/oauth/token
#security.oauth2.client.grant-type=password
#security.oauth2.client.scope=service
spring.main.allow-bean-definition-overriding=true

security.oauth2.resource.user-info-uri=http://127.0.0.1:7070/auth/security/check
security.oauth2.resource.prefer-token-info=false
#security.oauth2.client.id=micro-web
security.oauth2.client.clientId=micro-order-security
security.oauth2.client.client-secret=123456
security.oauth2.client.access-token-uri=http://api-gateway/auth/oauth/token
security.oauth2.client.grant-type=client_credentials
security.oauth2.client.scope=all