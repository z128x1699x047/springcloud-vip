#spring.profiles.active=cluster

spring.application.name=micro-web-jwt
server.port=8083

#是否讲ip注册到倒eureka
eureka.instance.prefer-ip-address=true
#服务续约，心跳的时间间隔
eureka.instance.lease-renewal-interval-in-seconds=30
#如果从前一次发送心跳时间起，90秒没接受到新的心跳，讲剔除服务
eureka.instance.lease-expiration-duration-in-seconds=90
#表示eureka client间隔多久去拉取服务注册信息，默认为30秒
eureka.client.registry-fetch-interval-seconds=30
#是否注册到eureka
eureka.client.registerWithEureka=true
#是否从eureka中拉取注册信息
eureka.client.fetchRegistry=true
#健康检测
eureka.client.healthcheck.enabled=true
eureka.client.serviceUrl.defaultZone=http://admin:admin@localhost:8764/eureka/

#feign开启熔断器
feign.hystrix.enabled=true
#开启feign的压缩功能
feign.compression.request.enabled=true
#feign.compression.request.mime-types=text/xml,application/xml,application/json
#feign.compression.request.min-request-size=2048
feign.compression.response.enabled=true

#全局超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
#hystrix.command.default.metrics.rollingStats.timeInMilliseconds=4000
#hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds=2000
#hystrix.command.<commandKey>作为前缀,默认是采用Feign的客户端的方法名字作为标识
hystrix.command.saveStudent.execution.isolation.thread.timeoutInMilliseconds=6000
hystrix.command.queryContents.circuitBreaker.sleepWindowInMilliseconds=20000

hystrix.command.errorMessage.execution.isolation.thread.timeoutInMilliseconds=100000000000

#ribbon.restclient.enabled=true
ribbon.client.name=micro-order
#点对点直连测试配置
# 关闭ribbon访问注册中心Eureka Server发现服务，但是服务依旧会注册。
#true使用eureka false不使用
ribbon.eureka.enabled=true
spring.cloud.loadbalancer.retry.enabled=true
#指定调用的节点
#micro-order.ribbon.listOfServers=localhost:8001
#单位ms ,请求连接超时时间
ribbon.ConnectTimeout=1000
#单位ms ,请求处理的超时时间
ribbon.ReadTimeout=3000

ribbon.OkToRetryOnAllOperations=false
#切换实例的重试次数
ribbon.MaxAutoRetriesNextServer=0
#对当前实例的重试次数 当Eureka中可以找到服务，但是服务连不上时将会重试
ribbon.MaxAutoRetries=0

#micro-order.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
#MICRO-ORDER.ribbon.NFLoadBalancerPingClassName=com.netflix.loadbalancer.PingUrl
#could not be registered. A bean with that name has already been defined in file
spring.main.allow-bean-definition-overriding=true

management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
#hystrix.stream  开放所有的监控接口
management.endpoints.web.exposure.include=*

#security.basic.enabled=true
#spring.security.user.name=micro-web
#spring.security.user.password=123
#security.oauth2.resource.jwt.key-uri=http://127.0.0.1:3030/oauth/token_key
#security.oauth2.resource.service-id=api-gateway
security.oauth2.client.clientId=pc
security.oauth2.client.client-secret=123456
security.oauth2.resource.jwt.key-uri=http://localhost:7070/jwt/oauth/token_key
security.oauth2.client.access-token-uri=http://localhost:7070/jwt/oauth/token
security.oauth2.client.grant-type=password
security.oauth2.client.scope=all
spring.sleuth.sampler.percentage=1.0
# 若在同一个注册中心的话可以启用自动发现，省略base-url
#spring.zipkin.locator.discovery.enabled=true
spring.zipkin.base-url=http://localhost:9411/